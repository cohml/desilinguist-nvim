local status_ok, configs = pcall(require, "nvim-treesitter.configs")
if not status_ok then
	return
end

configs.setup({
	ensure_installed = {
		"awk",
		"bash",
		"bibtex",
		"c",
		"c_sharp",
		"clojure",
		"cmake",
		"comment",
		"commonlisp",
		"cpp",
		"css",
		"csv",
		"diff",
		"disassembly",
		"dockerfile",
		"dot",
		"doxygen",
		"dtd",
		"fish",
		"fortran",
		"git_config",
		"git_rebase",
		"gitattributes",
		"gitcommit",
		"gitignore",
		"gnuplot",
		"go",
		"gpg",
		"haskell",
		"hcl",
		"html",
		"http",
		"ini",
		"java",
		"javascript",
		"jq",
		"jsdoc",
		"json",
		"json5",
		"jsonc",
		"jsonnet",
		"julia",
		"kotlin",
		"latex",
		"llvm",
		"lua",
		"luadoc",
		"make",
		"markdown",
		"markdown_inline",
		"matlab",
		"mermaid",
		"nim",
		"nim_format_string",
		"nix",
		"objc",
		"objdump",
		"pascal",
		"passwd",
		"pem",
		"perl",
		"php",
		"php_only",
		"phpdoc",
		"printf",
		"properties",
		"pymanifest",
		"python",
		"r",
		"readline",
		"regex",
		"requirements",
		"rst",
		"ruby",
		"rust",
		"scss",
		"sql",
		"ssh_config",
		"tcl",
		"terraform",
		"tmux",
		"todotxt",
		"toml",
		"tsv",
		"typescript",
		"vim",
		"vimdoc",
		"xml",
		"yaml",
		"zig",
	},
	sync_install = false, -- install languages synchronously (only applied to `ensure_installed`)
	auto_install = true,
	ignore_install = { "" }, -- List of parsers to ignore installing
	autopairs = {
		enable = true,
	},
	autotag = {
		enable = true,
	},
	highlight = {
		enable = true, -- false will disable the whole extension
		disable = { "" }, -- list of language that will be disabled
		additional_vim_regex_highlighting = true,
	},
	textobjects = {
		select = {
			enable = true,
			-- Automatically jump forward to textobj, similar to targets.vim
			lookahead = true,

			keymaps = {
				-- You can use the capture groups defined in textobjects.scm
				["af"] = "@function.outer",
				["if"] = "@function.inner",
				["ac"] = "@class.outer",
				["ic"] = "@class.inner",
			},
		},
		move = {
			enable = true,
			set_jumps = true, -- whether to set jumps in the jumplist
			goto_next_start = {
				["]m"] = "@function.outer",
				["]]"] = "@class.outer",
			},
			goto_next_end = {
				["]M"] = "@function.outer",
				["]["] = "@class.outer",
			},
			goto_previous_start = {
				["[m"] = "@function.outer",
				["[["] = "@class.outer",
			},
			goto_previous_end = {
				["[M"] = "@function.outer",
				["[]"] = "@class.outer",
			},
		},
	},
	indent = { enable = true, disable = { "yaml" } },
})
